version: "3.3"

services:
  traefik:
    restart: always
    image: "traefik:v2.6.3"
    container_name: "traefik"
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--serverstransport.insecureskipverify=true"
      - "--certificatesresolvers.leresolver.acme.email=${EMAIL}"
      - "--certificatesresolvers.leresolver.acme.storage=./acme.json"
      - "--certificatesresolvers.leresolver.acme.dnsChallenge.provider=route53"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${CF_DOMAIN}`)"
      - "traefik.http.routers.dashboard.entrypoints=web"
      - "traefik.http.routers.dashboard.service=api@internal"
    ports:
      - "${NETWORK_DOCKER_IP}:80:80"
      - "${NETWORK_DOCKER_IP}:443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./acme.json:/acme.json"
    environment:
      - "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}"
      - "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}"
      - "AWS_HOSTED_ZONE_ID=${AWS_HOSTED_ZONE_ID}"

  portainer:
    restart: always
    image: "portainer/portainer-ce:2.11.1"
    container_name: "portainer"
    command: -H unix:///var/run/docker.sock
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "portainer_data:/data"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cf-portainer.rule=Host(`portainer.${CF_DOMAIN}`)"
      - "traefik.http.routers.cf-portainer.entrypoints=web"
      - "traefik.http.services.cf-portainer.loadbalancer.server.port=9000"

  cloudflared:
    restart: always
    container_name: cloudflared
    image: cloudflare/cloudflared:2022.4.1
    command: "tunnel --no-autoupdate run --token ${CF_TUNNEL_TOKEN}"

  whoami:
    restart: always
    image: "traefik/whoami"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.${NETWORK_DOCKER_IP}.nip.io`)"
      - "traefik.http.routers.whoami.entrypoints=web"

  homeassistant:
    network_mode: "host"
    container_name: homeassistant
    restart: unless-stopped
    image: homeassistant/home-assistant
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
      - /dev/ttyUSB1:/dev/ttyUSB1
      - /dev/ttyACM0:/dev/ttyACM0
    volumes:
      - ./apps/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - ./data:/shared
      - /dev/serial/by-id/:/dev/serial/by-id/
    privileged: true
    environment:
      - "PUID=${PUID}"
      - "PGID=${PGID}"
      - "TZ=${TZ}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cf-homeassistant.rule=Host(`homeassistant.${CF_DOMAIN}`)"
      - "traefik.http.routers.cf-homeassistant.entrypoints=web"
      - "traefik.http.services.cf-homeassistant.loadbalancer.server.port=8123"

  transmission:
    restart: always
    image: "lscr.io/linuxserver/transmission:3.00-r5-ls118"
    environment:
      - "PUID=${PUID}"
      - "PGID=${PGID}"
    volumes:
      - "./data:/downloads:rw"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cf-transmission.rule=Host(`transmission.${CF_DOMAIN}`)"
      - "traefik.http.services.cf-transmission.loadbalancer.server.port=9091"
      - "traefik.http.routers.cf-transmission.entrypoints=web"

  minidlna:
    restart: always
    networks:
      lan:
        ipv4_address: "${NETWORK_DLNA_IP}"
    image: "vladgh/minidlna:1.2.0"
    environment:
      - "PUID=${PUID}"
      - "PGID=${PGID}"
      - "MINIDLNA_MEDIA_DIR=/media"
    volumes:
      - "./data:/media:ro"

networks:
  lan:
    driver: macvlan
    driver_opts:
      parent: "${NETWORK_ADAPTER}"
    ipam:
      config:
        - subnet: "${NETWORK_SUBNET}"

volumes:
  portainer_data:
